{
  "title": "Contrast",
  "description": "Contrasts are weighted sums of parameter estimates (betas) generated by a model fit.\n\n``Contrast`` defines the structure of the elements of the :py:attr:`Node.Contrasts` list.\n\nAlong with :py:class:`DummyContrasts`, Contrasts define the outputs of a :py:class:`Node`.\n\nWhile ``\"t\"`` and ``\"pass\"`` contrasts are passed as inputs to the next node, ``\"F\"``\ncontrasts are terminal and are not passed as inputs to following :py:class:`Node`\\s.\n\nExamples\n--------\n\nSubtract two conditions:\n\n.. code-block:: json\n\n    {\n      \"Name\": \"a_vs_b\",\n      \"ConditionList\": [\"A\", \"B\"],\n      \"Weights\": [1, -1],\n      \"Test\": \"t\"\n    }\n\nContrast one condition to the average of two others:\n\n.. code-block:: json\n\n    {\n      \"Name\": \"a_vs_other\",\n      \"ConditionList\": [\"A\", \"B\", \"C\"],\n      \"Weights\": [1, -0.5, -0.5],\n      \"Test\": \"t\"\n    }\n\nTo pass an individual parameter estimate without changing its name to following nodes:\n\n.. code-block:: json\n\n    {\"Name\": \"A\", \"ConditionList\": [\"A\"], \"Weights\": [1], \"Test\": \"t\"}",
  "type": "object",
  "properties": {
    "Description": {
      "title": "Description",
      "type": "string"
    },
    "Name": {
      "title": "Name",
      "type": "string"
    },
    "ConditionList": {
      "title": "Conditionlist",
      "type": "array",
      "items": {
        "anyOf": [
          {
            "enum": [
              1
            ],
            "type": "integer"
          },
          {
            "type": "string"
          }
        ]
      }
    },
    "Weights": {
      "title": "Weights",
      "anyOf": [
        {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ]
          }
        },
        {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "number"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        }
      ]
    },
    "Test": {
      "title": "Test",
      "enum": [
        "pass",
        "t",
        "F"
      ],
      "type": "string"
    }
  },
  "required": [
    "Name",
    "ConditionList",
    "Weights",
    "Test"
  ]
}