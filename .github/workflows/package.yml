name: Packaging

on:
  push:
    branches:
      - main
      - maint/*
      - rel/*
    tags:
      - '*'
  pull_request:
    branches:
      - main
      - maint/*
  workflow_dispatch:

defaults:
  run:
    shell: bash

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  build:
    name: Build & verify package
    runs-on: ubuntu-latest
    permissions:
      attestations: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: hynek/build-and-inspect-python-package@v2
        with:
          path: bsmschema
          attest-build-provenance-github: ${{ github.event_name != 'pull_request' }}
      - name: Upload uv.lock
        uses: actions/upload-artifact@v4
        with:
          name: Lockfile
          path: |
            uv.lock
            pyproject.toml

  test:
    runs-on: ${{ matrix.os }}
    needs: [build]
    strategy:
      matrix:
        os: ['ubuntu-latest']
        source: ['repo', 'sdist']
      fail-fast: false

    env:
      DEPENDS: ${{ matrix.dependencies }}

    steps:
      - uses: actions/checkout@v4
        if: matrix.source == 'repo'
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Download packages built by build-and-inspect-python-package
        if: matrix.source == 'sdist'
        uses: actions/download-artifact@v4
        with:
          name: Packages
          path: dist
      - name: Download lockfile
        if: matrix.source == 'sdist'
        uses: actions/download-artifact@v4
        with:
          name: Lockfile
      - name: Extract sdist
        if: matrix.source == 'sdist'
        run: |
          ls -lR
          mkdir -p bsmschema
          tar --strip-components=1 -C bsmschema -xzf dist/*.tar.gz
          ls -lR
      - name: Set up uv
        uses: astral-sh/setup-uv@v6
      - name: Install tox
        run: |
          uv tool install tox --with=tox-uv
      - name: Run tox
        run: tox run-parallel -c bsmschema/tox.ini --exit-and-dump-after 60

  publish:
    name: Publish package to PyPI
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    runs-on: ubuntu-latest
    needs: [build, test]
    permissions:
      attestations: write
      id-token: write

    steps:
      - name: Download packages built by build-and-inspect-python-package
        uses: actions/download-artifact@v4
        with:
          name: Packages
          path: dist

      - name: Upload package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
