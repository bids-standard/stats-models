{
  "description": "Dummy contrasts are contrasts with one condition, a weight of one,\nand the same name as the condition. That is,\n\n::\n\n    \"DummyContrasts\": {\"Contrasts\": [\"A\", \"B\"], \"Test\": \"t\"}\n\nis equivalent to the following list of :py:class:`Contrast`\\s::\n\n    \"Contrasts\": [\n        {\"Name\": \"A\", \"ConditionList\": [\"A\"], \"Weights\": [1], \"Test\": \"t\"}\n        {\"Name\": \"B\", \"ConditionList\": [\"B\"], \"Weights\": [1], \"Test\": \"t\"}\n    ]\n\nWhile ``\"t\"`` and ``\"pass\"`` contrasts are passed as inputs to the next node, ``\"F\"``\ncontrasts are terminal and are not passed as inputs to following :py:class:`Node`\\s.",
  "properties": {
    "Description": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Description"
    },
    "Contrasts": {
      "anyOf": [
        {
          "items": {
            "anyOf": [
              {
                "const": 1,
                "type": "integer"
              },
              {
                "type": "string"
              }
            ]
          },
          "type": "array"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Contrasts"
    },
    "Test": {
      "enum": [
        "pass",
        "t",
        "F"
      ],
      "title": "Test",
      "type": "string"
    }
  },
  "required": [
    "Test"
  ],
  "title": "DummyContrasts",
  "type": "object"
}